// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: logic.proto

package pb

import (
	protocol "github.com/zhixunjie/im-fun/api/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 平台
type Platform int32

const (
	Platform_Platform_None       Platform = 0
	Platform_Platform_PC         Platform = 1 // PC
	Platform_Platform_Android    Platform = 2 // 安卓
	Platform_Platform_Ios        Platform = 3 // IOS
	Platform_Platform_Web        Platform = 4 // 网页
	Platform_Platform_MinProgram Platform = 5 // 小程序
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "Platform_None",
		1: "Platform_PC",
		2: "Platform_Android",
		3: "Platform_Ios",
		4: "Platform_Web",
		5: "Platform_MinProgram",
	}
	Platform_value = map[string]int32{
		"Platform_None":       0,
		"Platform_PC":         1,
		"Platform_Android":    2,
		"Platform_Ios":        3,
		"Platform_Web":        4,
		"Platform_MinProgram": 5,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_proto_enumTypes[0].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_logic_proto_enumTypes[0]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0}
}

type KafkaSendMsg_Type int32

const (
	KafkaSendMsg_ToUsers KafkaSendMsg_Type = 0
	KafkaSendMsg_ToRoom  KafkaSendMsg_Type = 1
	KafkaSendMsg_ToAll   KafkaSendMsg_Type = 2
)

// Enum value maps for KafkaSendMsg_Type.
var (
	KafkaSendMsg_Type_name = map[int32]string{
		0: "ToUsers",
		1: "ToRoom",
		2: "ToAll",
	}
	KafkaSendMsg_Type_value = map[string]int32{
		"ToUsers": 0,
		"ToRoom":  1,
		"ToAll":   2,
	}
)

func (x KafkaSendMsg_Type) Enum() *KafkaSendMsg_Type {
	p := new(KafkaSendMsg_Type)
	*p = x
	return p
}

func (x KafkaSendMsg_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KafkaSendMsg_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_proto_enumTypes[1].Descriptor()
}

func (KafkaSendMsg_Type) Type() protoreflect.EnumType {
	return &file_logic_proto_enumTypes[1]
}

func (x KafkaSendMsg_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KafkaSendMsg_Type.Descriptor instead.
func (KafkaSendMsg_Type) EnumDescriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0, 0}
}

type KafkaSendMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          KafkaSendMsg_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=imfun.logic.KafkaSendMsg_Type" json:"type,omitempty"`
	SubId         int32                  `protobuf:"varint,2,opt,name=subId,proto3" json:"subId,omitempty"`
	Speed         int32                  `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	ServerId      string                 `protobuf:"bytes,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	RoomId        string                 `protobuf:"bytes,5,opt,name=roomId,proto3" json:"roomId,omitempty"`
	TcpSessionIds []string               `protobuf:"bytes,6,rep,name=tcpSessionIds,proto3" json:"tcpSessionIds,omitempty"`
	Msg           []byte                 `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaSendMsg) Reset() {
	*x = KafkaSendMsg{}
	mi := &file_logic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaSendMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSendMsg) ProtoMessage() {}

func (x *KafkaSendMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSendMsg.ProtoReflect.Descriptor instead.
func (*KafkaSendMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaSendMsg) GetType() KafkaSendMsg_Type {
	if x != nil {
		return x.Type
	}
	return KafkaSendMsg_ToUsers
}

func (x *KafkaSendMsg) GetSubId() int32 {
	if x != nil {
		return x.SubId
	}
	return 0
}

func (x *KafkaSendMsg) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *KafkaSendMsg) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *KafkaSendMsg) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *KafkaSendMsg) GetTcpSessionIds() []string {
	if x != nil {
		return x.TcpSessionIds
	}
	return nil
}

func (x *KafkaSendMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type ConnectCommon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	UserId        uint64                 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TcpSessionId  string                 `protobuf:"bytes,3,opt,name=tcpSessionId,proto3" json:"tcpSessionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectCommon) Reset() {
	*x = ConnectCommon{}
	mi := &file_logic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectCommon) ProtoMessage() {}

func (x *ConnectCommon) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectCommon.ProtoReflect.Descriptor instead.
func (*ConnectCommon) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectCommon) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ConnectCommon) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ConnectCommon) GetTcpSessionId() string {
	if x != nil {
		return x.TcpSessionId
	}
	return ""
}

// 建立TCP连接，并且auth后，保存映射关系
type ConnectReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          *ConnectCommon         `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	RoomId        string                 `protobuf:"bytes,4,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Token         string                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Platform      Platform               `protobuf:"varint,6,opt,name=platform,proto3,enum=imfun.logic.Platform" json:"platform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectReq) Reset() {
	*x = ConnectReq{}
	mi := &file_logic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReq) ProtoMessage() {}

func (x *ConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReq.ProtoReflect.Descriptor instead.
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectReq) GetComm() *ConnectCommon {
	if x != nil {
		return x.Comm
	}
	return nil
}

func (x *ConnectReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ConnectReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectReq) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_Platform_None
}

type ConnectResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HbCfg         *HbCfg                 `protobuf:"bytes,1,opt,name=hb_cfg,json=hbCfg,proto3" json:"hb_cfg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResp) Reset() {
	*x = ConnectResp{}
	mi := &file_logic_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResp) ProtoMessage() {}

func (x *ConnectResp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResp.ProtoReflect.Descriptor instead.
func (*ConnectResp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectResp) GetHbCfg() *HbCfg {
	if x != nil {
		return x.HbCfg
	}
	return nil
}

type HbCfg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interval      int64                  `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`                    // 心跳间隔(s)
	FailCount     int64                  `protobuf:"varint,2,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"` // 心跳失败次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HbCfg) Reset() {
	*x = HbCfg{}
	mi := &file_logic_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HbCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HbCfg) ProtoMessage() {}

func (x *HbCfg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HbCfg.ProtoReflect.Descriptor instead.
func (*HbCfg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{4}
}

func (x *HbCfg) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *HbCfg) GetFailCount() int64 {
	if x != nil {
		return x.FailCount
	}
	return 0
}

// 断开TCP连接，删除映射关系
type DisconnectReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          *ConnectCommon         `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectReq) Reset() {
	*x = DisconnectReq{}
	mi := &file_logic_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectReq) ProtoMessage() {}

func (x *DisconnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectReq.ProtoReflect.Descriptor instead.
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{5}
}

func (x *DisconnectReq) GetComm() *ConnectCommon {
	if x != nil {
		return x.Comm
	}
	return nil
}

type DisconnectResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Has           bool                   `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectResp) Reset() {
	*x = DisconnectResp{}
	mi := &file_logic_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectResp) ProtoMessage() {}

func (x *DisconnectResp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectResp.ProtoReflect.Descriptor instead.
func (*DisconnectResp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{6}
}

func (x *DisconnectResp) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type HeartbeatReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          *ConnectCommon         `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	mi := &file_logic_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatReq) GetComm() *ConnectCommon {
	if x != nil {
		return x.Comm
	}
	return nil
}

type HeartbeatResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Has           bool                   `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResp) Reset() {
	*x = HeartbeatResp{}
	mi := &file_logic_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResp) ProtoMessage() {}

func (x *HeartbeatResp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResp.ProtoReflect.Descriptor instead.
func (*HeartbeatResp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{8}
}

func (x *HeartbeatResp) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type OnlineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	RoomCount     map[string]int32       `protobuf:"bytes,2,rep,name=roomCount,proto3" json:"roomCount,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineReq) Reset() {
	*x = OnlineReq{}
	mi := &file_logic_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReq) ProtoMessage() {}

func (x *OnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReq.ProtoReflect.Descriptor instead.
func (*OnlineReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{9}
}

func (x *OnlineReq) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *OnlineReq) GetRoomCount() map[string]int32 {
	if x != nil {
		return x.RoomCount
	}
	return nil
}

type OnlineResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllRoomCount  map[string]int32       `protobuf:"bytes,1,rep,name=allRoomCount,proto3" json:"allRoomCount,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineResp) Reset() {
	*x = OnlineResp{}
	mi := &file_logic_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineResp) ProtoMessage() {}

func (x *OnlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineResp.ProtoReflect.Descriptor instead.
func (*OnlineResp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{10}
}

func (x *OnlineResp) GetAllRoomCount() map[string]int32 {
	if x != nil {
		return x.AllRoomCount
	}
	return nil
}

type ReceiveReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Proto         *protocol.Proto        `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveReq) Reset() {
	*x = ReceiveReq{}
	mi := &file_logic_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReq) ProtoMessage() {}

func (x *ReceiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReq.ProtoReflect.Descriptor instead.
func (*ReceiveReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{11}
}

func (x *ReceiveReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReceiveReq) GetProto() *protocol.Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

type ReceiveResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveResp) Reset() {
	*x = ReceiveResp{}
	mi := &file_logic_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResp) ProtoMessage() {}

func (x *ReceiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResp.ProtoReflect.Descriptor instead.
func (*ReceiveResp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{12}
}

type NodesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      Platform               `protobuf:"varint,1,opt,name=platform,proto3,enum=imfun.logic.Platform" json:"platform,omitempty"`
	ClientIP      string                 `protobuf:"bytes,2,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodesReq) Reset() {
	*x = NodesReq{}
	mi := &file_logic_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesReq) ProtoMessage() {}

func (x *NodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesReq.ProtoReflect.Descriptor instead.
func (*NodesReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{13}
}

func (x *NodesReq) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_Platform_None
}

func (x *NodesReq) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type NodesResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	TcpPort       int32                  `protobuf:"varint,2,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	WsPort        int32                  `protobuf:"varint,3,opt,name=ws_port,json=wsPort,proto3" json:"ws_port,omitempty"`
	WssPort       int32                  `protobuf:"varint,4,opt,name=wss_port,json=wssPort,proto3" json:"wss_port,omitempty"`
	HbCfg         *HbCfg                 `protobuf:"bytes,5,opt,name=hb_cfg,json=hbCfg,proto3" json:"hb_cfg,omitempty"`
	Nodes         []string               `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Backoff       *Backoff               `protobuf:"bytes,7,opt,name=backoff,proto3" json:"backoff,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodesResp) Reset() {
	*x = NodesResp{}
	mi := &file_logic_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesResp) ProtoMessage() {}

func (x *NodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesResp.ProtoReflect.Descriptor instead.
func (*NodesResp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{14}
}

func (x *NodesResp) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NodesResp) GetTcpPort() int32 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *NodesResp) GetWsPort() int32 {
	if x != nil {
		return x.WsPort
	}
	return 0
}

func (x *NodesResp) GetWssPort() int32 {
	if x != nil {
		return x.WssPort
	}
	return 0
}

func (x *NodesResp) GetHbCfg() *HbCfg {
	if x != nil {
		return x.HbCfg
	}
	return nil
}

func (x *NodesResp) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodesResp) GetBackoff() *Backoff {
	if x != nil {
		return x.Backoff
	}
	return nil
}

type Backoff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseDelay     int32                  `protobuf:"varint,1,opt,name=base_delay,json=baseDelay,proto3" json:"base_delay,omitempty"`
	Multiplier    float32                `protobuf:"fixed32,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	Jitter        float32                `protobuf:"fixed32,3,opt,name=jitter,proto3" json:"jitter,omitempty"`
	MaxDelay      int32                  `protobuf:"varint,4,opt,name=max_delay,json=maxDelay,proto3" json:"max_delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Backoff) Reset() {
	*x = Backoff{}
	mi := &file_logic_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Backoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backoff) ProtoMessage() {}

func (x *Backoff) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backoff.ProtoReflect.Descriptor instead.
func (*Backoff) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{15}
}

func (x *Backoff) GetBaseDelay() int32 {
	if x != nil {
		return x.BaseDelay
	}
	return 0
}

func (x *Backoff) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

func (x *Backoff) GetJitter() float32 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

func (x *Backoff) GetMaxDelay() int32 {
	if x != nil {
		return x.MaxDelay
	}
	return 0
}

var File_logic_proto protoreflect.FileDescriptor

const file_logic_proto_rawDesc = "" +
	"\n" +
	"\vlogic.proto\x12\vimfun.logic\x1a\x0eprotocol.proto\"\x86\x02\n" +
	"\fKafkaSendMsg\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.imfun.logic.KafkaSendMsg.TypeR\x04type\x12\x14\n" +
	"\x05subId\x18\x02 \x01(\x05R\x05subId\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x05R\x05speed\x12\x1a\n" +
	"\bserverId\x18\x04 \x01(\tR\bserverId\x12\x16\n" +
	"\x06roomId\x18\x05 \x01(\tR\x06roomId\x12$\n" +
	"\rtcpSessionIds\x18\x06 \x03(\tR\rtcpSessionIds\x12\x10\n" +
	"\x03msg\x18\a \x01(\fR\x03msg\"*\n" +
	"\x04Type\x12\v\n" +
	"\aToUsers\x10\x00\x12\n" +
	"\n" +
	"\x06ToRoom\x10\x01\x12\t\n" +
	"\x05ToAll\x10\x02\"g\n" +
	"\rConnectCommon\x12\x1a\n" +
	"\bserverId\x18\x01 \x01(\tR\bserverId\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\x04R\x06userId\x12\"\n" +
	"\ftcpSessionId\x18\x03 \x01(\tR\ftcpSessionId\"\x9d\x01\n" +
	"\n" +
	"ConnectReq\x12.\n" +
	"\x04comm\x18\x01 \x01(\v2\x1a.imfun.logic.ConnectCommonR\x04comm\x12\x16\n" +
	"\x06roomId\x18\x04 \x01(\tR\x06roomId\x12\x14\n" +
	"\x05token\x18\x05 \x01(\tR\x05token\x121\n" +
	"\bplatform\x18\x06 \x01(\x0e2\x15.imfun.logic.PlatformR\bplatform\"8\n" +
	"\vConnectResp\x12)\n" +
	"\x06hb_cfg\x18\x01 \x01(\v2\x12.imfun.logic.HbCfgR\x05hbCfg\"B\n" +
	"\x05HbCfg\x12\x1a\n" +
	"\binterval\x18\x01 \x01(\x03R\binterval\x12\x1d\n" +
	"\n" +
	"fail_count\x18\x02 \x01(\x03R\tfailCount\"?\n" +
	"\rDisconnectReq\x12.\n" +
	"\x04comm\x18\x01 \x01(\v2\x1a.imfun.logic.ConnectCommonR\x04comm\"\"\n" +
	"\x0eDisconnectResp\x12\x10\n" +
	"\x03has\x18\x01 \x01(\bR\x03has\">\n" +
	"\fHeartbeatReq\x12.\n" +
	"\x04comm\x18\x01 \x01(\v2\x1a.imfun.logic.ConnectCommonR\x04comm\"!\n" +
	"\rHeartbeatResp\x12\x10\n" +
	"\x03has\x18\x01 \x01(\bR\x03has\"\xaa\x01\n" +
	"\tOnlineReq\x12\x1a\n" +
	"\bserverId\x18\x01 \x01(\tR\bserverId\x12C\n" +
	"\troomCount\x18\x02 \x03(\v2%.imfun.logic.OnlineReq.RoomCountEntryR\troomCount\x1a<\n" +
	"\x0eRoomCountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x9c\x01\n" +
	"\n" +
	"OnlineResp\x12M\n" +
	"\fallRoomCount\x18\x01 \x03(\v2).imfun.logic.OnlineResp.AllRoomCountEntryR\fallRoomCount\x1a?\n" +
	"\x11AllRoomCountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"Q\n" +
	"\n" +
	"ReceiveReq\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\x04R\x06userId\x12+\n" +
	"\x05proto\x18\x02 \x01(\v2\x15.imfun.protocol.ProtoR\x05proto\"\r\n" +
	"\vReceiveResp\"Y\n" +
	"\bNodesReq\x121\n" +
	"\bplatform\x18\x01 \x01(\x0e2\x15.imfun.logic.PlatformR\bplatform\x12\x1a\n" +
	"\bclientIP\x18\x02 \x01(\tR\bclientIP\"\xe3\x01\n" +
	"\tNodesResp\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x19\n" +
	"\btcp_port\x18\x02 \x01(\x05R\atcpPort\x12\x17\n" +
	"\aws_port\x18\x03 \x01(\x05R\x06wsPort\x12\x19\n" +
	"\bwss_port\x18\x04 \x01(\x05R\awssPort\x12)\n" +
	"\x06hb_cfg\x18\x05 \x01(\v2\x12.imfun.logic.HbCfgR\x05hbCfg\x12\x14\n" +
	"\x05nodes\x18\x06 \x03(\tR\x05nodes\x12.\n" +
	"\abackoff\x18\a \x01(\v2\x14.imfun.logic.BackoffR\abackoff\"}\n" +
	"\aBackoff\x12\x1d\n" +
	"\n" +
	"base_delay\x18\x01 \x01(\x05R\tbaseDelay\x12\x1e\n" +
	"\n" +
	"multiplier\x18\x02 \x01(\x02R\n" +
	"multiplier\x12\x16\n" +
	"\x06jitter\x18\x03 \x01(\x02R\x06jitter\x12\x1b\n" +
	"\tmax_delay\x18\x04 \x01(\x05R\bmaxDelay*\x81\x01\n" +
	"\bPlatform\x12\x11\n" +
	"\rPlatform_None\x10\x00\x12\x0f\n" +
	"\vPlatform_PC\x10\x01\x12\x14\n" +
	"\x10Platform_Android\x10\x02\x12\x10\n" +
	"\fPlatform_Ios\x10\x03\x12\x10\n" +
	"\fPlatform_Web\x10\x04\x12\x17\n" +
	"\x13Platform_MinProgram\x10\x052\x86\x03\n" +
	"\x05Logic\x12<\n" +
	"\aConnect\x12\x17.imfun.logic.ConnectReq\x1a\x18.imfun.logic.ConnectResp\x12E\n" +
	"\n" +
	"Disconnect\x12\x1a.imfun.logic.DisconnectReq\x1a\x1b.imfun.logic.DisconnectResp\x12B\n" +
	"\tHeartbeat\x12\x19.imfun.logic.HeartbeatReq\x1a\x1a.imfun.logic.HeartbeatResp\x12>\n" +
	"\vRenewOnline\x12\x16.imfun.logic.OnlineReq\x1a\x17.imfun.logic.OnlineResp\x12<\n" +
	"\aReceive\x12\x17.imfun.logic.ReceiveReq\x1a\x18.imfun.logic.ReceiveResp\x126\n" +
	"\x05Nodes\x12\x15.imfun.logic.NodesReq\x1a\x16.imfun.logic.NodesRespB'Z%github.com/zhixunjie/im-fun/api/pb;pbb\x06proto3"

var (
	file_logic_proto_rawDescOnce sync.Once
	file_logic_proto_rawDescData []byte
)

func file_logic_proto_rawDescGZIP() []byte {
	file_logic_proto_rawDescOnce.Do(func() {
		file_logic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_logic_proto_rawDesc), len(file_logic_proto_rawDesc)))
	})
	return file_logic_proto_rawDescData
}

var file_logic_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_logic_proto_goTypes = []any{
	(Platform)(0),          // 0: imfun.logic.Platform
	(KafkaSendMsg_Type)(0), // 1: imfun.logic.KafkaSendMsg.Type
	(*KafkaSendMsg)(nil),   // 2: imfun.logic.KafkaSendMsg
	(*ConnectCommon)(nil),  // 3: imfun.logic.ConnectCommon
	(*ConnectReq)(nil),     // 4: imfun.logic.ConnectReq
	(*ConnectResp)(nil),    // 5: imfun.logic.ConnectResp
	(*HbCfg)(nil),          // 6: imfun.logic.HbCfg
	(*DisconnectReq)(nil),  // 7: imfun.logic.DisconnectReq
	(*DisconnectResp)(nil), // 8: imfun.logic.DisconnectResp
	(*HeartbeatReq)(nil),   // 9: imfun.logic.HeartbeatReq
	(*HeartbeatResp)(nil),  // 10: imfun.logic.HeartbeatResp
	(*OnlineReq)(nil),      // 11: imfun.logic.OnlineReq
	(*OnlineResp)(nil),     // 12: imfun.logic.OnlineResp
	(*ReceiveReq)(nil),     // 13: imfun.logic.ReceiveReq
	(*ReceiveResp)(nil),    // 14: imfun.logic.ReceiveResp
	(*NodesReq)(nil),       // 15: imfun.logic.NodesReq
	(*NodesResp)(nil),      // 16: imfun.logic.NodesResp
	(*Backoff)(nil),        // 17: imfun.logic.Backoff
	nil,                    // 18: imfun.logic.OnlineReq.RoomCountEntry
	nil,                    // 19: imfun.logic.OnlineResp.AllRoomCountEntry
	(*protocol.Proto)(nil), // 20: imfun.protocol.Proto
}
var file_logic_proto_depIdxs = []int32{
	1,  // 0: imfun.logic.KafkaSendMsg.type:type_name -> imfun.logic.KafkaSendMsg.Type
	3,  // 1: imfun.logic.ConnectReq.comm:type_name -> imfun.logic.ConnectCommon
	0,  // 2: imfun.logic.ConnectReq.platform:type_name -> imfun.logic.Platform
	6,  // 3: imfun.logic.ConnectResp.hb_cfg:type_name -> imfun.logic.HbCfg
	3,  // 4: imfun.logic.DisconnectReq.comm:type_name -> imfun.logic.ConnectCommon
	3,  // 5: imfun.logic.HeartbeatReq.comm:type_name -> imfun.logic.ConnectCommon
	18, // 6: imfun.logic.OnlineReq.roomCount:type_name -> imfun.logic.OnlineReq.RoomCountEntry
	19, // 7: imfun.logic.OnlineResp.allRoomCount:type_name -> imfun.logic.OnlineResp.AllRoomCountEntry
	20, // 8: imfun.logic.ReceiveReq.proto:type_name -> imfun.protocol.Proto
	0,  // 9: imfun.logic.NodesReq.platform:type_name -> imfun.logic.Platform
	6,  // 10: imfun.logic.NodesResp.hb_cfg:type_name -> imfun.logic.HbCfg
	17, // 11: imfun.logic.NodesResp.backoff:type_name -> imfun.logic.Backoff
	4,  // 12: imfun.logic.Logic.Connect:input_type -> imfun.logic.ConnectReq
	7,  // 13: imfun.logic.Logic.Disconnect:input_type -> imfun.logic.DisconnectReq
	9,  // 14: imfun.logic.Logic.Heartbeat:input_type -> imfun.logic.HeartbeatReq
	11, // 15: imfun.logic.Logic.RenewOnline:input_type -> imfun.logic.OnlineReq
	13, // 16: imfun.logic.Logic.Receive:input_type -> imfun.logic.ReceiveReq
	15, // 17: imfun.logic.Logic.Nodes:input_type -> imfun.logic.NodesReq
	5,  // 18: imfun.logic.Logic.Connect:output_type -> imfun.logic.ConnectResp
	8,  // 19: imfun.logic.Logic.Disconnect:output_type -> imfun.logic.DisconnectResp
	10, // 20: imfun.logic.Logic.Heartbeat:output_type -> imfun.logic.HeartbeatResp
	12, // 21: imfun.logic.Logic.RenewOnline:output_type -> imfun.logic.OnlineResp
	14, // 22: imfun.logic.Logic.Receive:output_type -> imfun.logic.ReceiveResp
	16, // 23: imfun.logic.Logic.Nodes:output_type -> imfun.logic.NodesResp
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_logic_proto_init() }
func file_logic_proto_init() {
	if File_logic_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_logic_proto_rawDesc), len(file_logic_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_proto_goTypes,
		DependencyIndexes: file_logic_proto_depIdxs,
		EnumInfos:         file_logic_proto_enumTypes,
		MessageInfos:      file_logic_proto_msgTypes,
	}.Build()
	File_logic_proto = out.File
	file_logic_proto_goTypes = nil
	file_logic_proto_depIdxs = nil
}
